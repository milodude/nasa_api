// Mocks generated by Mockito 5.4.4 from annotations
// in nasa_api/test/features/last_week_pictures/data/repository/apod_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:nasa_api/core/providers/connectivity_provider.dart' as _i5;
import 'package:nasa_api/features/last_week_pictures/data/data_source/apod_data_source.dart'
    as _i2;
import 'package:nasa_api/features/last_week_pictures/data/model/pictures_of_the_day_model.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [ApodDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockApodDataSource extends _i1.Mock implements _i2.ApodDataSource {
  MockApodDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.PicturesOfTheDayModel>> getLastWeekPicturesOfTheDay() =>
      (super.noSuchMethod(
        Invocation.method(
          #getLastWeekPicturesOfTheDay,
          [],
        ),
        returnValue: _i3.Future<List<_i4.PicturesOfTheDayModel>>.value(
            <_i4.PicturesOfTheDayModel>[]),
      ) as _i3.Future<List<_i4.PicturesOfTheDayModel>>);
}

/// A class which mocks [ConnectivityProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockConnectivityProvider extends _i1.Mock
    implements _i5.ConnectivityProvider {
  MockConnectivityProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Stream<bool> get connectionStatusStream => (super.noSuchMethod(
        Invocation.getter(#connectionStatusStream),
        returnValue: _i3.Stream<bool>.empty(),
      ) as _i3.Stream<bool>);

  @override
  _i3.Future<void> checkInitialConnection() => (super.noSuchMethod(
        Invocation.method(
          #checkInitialConnection,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
